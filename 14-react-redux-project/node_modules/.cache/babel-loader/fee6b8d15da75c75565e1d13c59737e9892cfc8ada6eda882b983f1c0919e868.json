{"ast":null,"code":"var _jsxFileName = \"/Users/soyeon/Documents/study/react/14-react-redux-project/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport classes from './Counter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  // useSelector를 이용해서 저장소가 관리하는 데이터에 엑세스할 수 있다\n  // 이 함수를 호출하고, 이 useSelector에 함수를 넣어줘야한다\n  // 넣은 함수는 리덕스가 관리하는 상태를 받고, 우리가 추출하련느 상태 부분을 리턴해야한다\n  const counter = useSelector(state => state.counter);\n  // useDispatch 훅을 사용하여 dispatch function을 반환한다\n  // redux store에 대한 action을 보낸다\n  const dispatch = useDispatch();\n  const toggleCounterHandler = () => {};\n  const incrementHandler = (state = {\n    counter: 0\n  }, action) => {\n    if (action.type === 'increment') {\n      return {\n        counter: state.counter + 1\n      };\n    }\n  };\n  const decrementHandler = () => {};\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"kekweKlgGDYl7VGjQQ+BKXXb0Ho=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["classes","useSelector","useDispatch","jsxDEV","_jsxDEV","Counter","_s","counter","state","dispatch","toggleCounterHandler","incrementHandler","action","type","decrementHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","$RefreshReg$"],"sources":["/Users/soyeon/Documents/study/react/14-react-redux-project/src/components/Counter.js"],"sourcesContent":["import classes from './Counter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Counter = () => {\n  // useSelector를 이용해서 저장소가 관리하는 데이터에 엑세스할 수 있다\n  // 이 함수를 호출하고, 이 useSelector에 함수를 넣어줘야한다\n  // 넣은 함수는 리덕스가 관리하는 상태를 받고, 우리가 추출하련느 상태 부분을 리턴해야한다\n  const counter = useSelector(state => state.counter);\n  // useDispatch 훅을 사용하여 dispatch function을 반환한다\n  // redux store에 대한 action을 보낸다\n  const dispatch = useDispatch();\n  const toggleCounterHandler = () => {};\n\n  const incrementHandler = (state = {counter : 0}, action )=> {\n    if(action.type === 'increment'){\n      return{\n        counter: state.counter +1,\n      };\n    }\n  };\n  const decrementHandler = ()=> {\n\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{counter}</div>\n      <div>\n        <button>Increment</button>\n        <button>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA;EACA;EACA,MAAMC,OAAO,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,OAAO,CAAC;EACnD;EACA;EACA,MAAME,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM,CAAC,CAAC;EAErC,MAAMC,gBAAgB,GAAGA,CAACH,KAAK,GAAG;IAACD,OAAO,EAAG;EAAC,CAAC,EAAEK,MAAM,KAAK;IAC1D,IAAGA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAC;MAC7B,OAAM;QACJN,OAAO,EAAEC,KAAK,CAACD,OAAO,GAAE;MAC1B,CAAC;IACH;EACF,CAAC;EACD,MAAMO,gBAAgB,GAAGA,CAAA,KAAK,CAE9B,CAAC;EAED,oBACEV,OAAA;IAAMW,SAAS,EAAEf,OAAO,CAACO,OAAQ;IAAAS,QAAA,gBAC/BZ,OAAA;MAAAY,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBhB,OAAA;MAAKW,SAAS,EAAEf,OAAO,CAACqB,KAAM;MAAAL,QAAA,EAAET;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9ChB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAQ;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1BhB,OAAA;QAAAY,QAAA,EAAQ;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACNhB,OAAA;MAAQkB,OAAO,EAAEZ,oBAAqB;MAAAM,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEX,CAAC;AAACd,EAAA,CAhCID,OAAO;EAAA,QAIKJ,WAAW,EAGVC,WAAW;AAAA;AAAAqB,EAAA,GAPxBlB,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}