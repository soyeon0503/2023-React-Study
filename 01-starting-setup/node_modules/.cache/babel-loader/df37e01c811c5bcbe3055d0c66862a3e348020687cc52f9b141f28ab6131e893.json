{"ast":null,"code":"var _jsxFileName = \"/Users/jeonsoyeon/Desktop/react/01-starting-setup/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filterdYear, setFilterdYear] = useState(\"2019\");\n  const filterChangeHandler = selectedYear => {\n    setFilterdYear(selectedYear);\n    console.log(filterdYear);\n    props.items.filter(props);\n  };\n  const filteredArray = props.items.filter(expens => {\n    return expens.date.getFullYear().toString() === filterdYear;\n  });\n  const flagfilterdArray = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" No expense Found./\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 28\n  }, this);\n  if (filteredArray.length > 0) {\n    flagfilterdArray = filteredArray.map(expens => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expens.title,\n      amount: expens.amount,\n      date: expens.date\n    }, expens.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: /*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filterdYear,\n        onFilterChangeHandler: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"hg8uh2kyX7apTPrbnJE1yKyZrIs=\");\n_c = Expenses;\nexport default Expenses;\n// 버튼 추가하면 우리 화면에서는 맨 위에 보이는 아이템이 실제로는\n// 맨 아래에 가 있다\n// 리액트는 새롭게 생긴 아이템을 div맨 마지막 아이템으로 렌더링하고\n// 모든 아이템을 업데이트해서 순서를 바꾼다\n// 리액트에게는 다 고만고만한 애들로 보이기 때문에 새로운 아이템이 어느 위치에 추가되어야 할지를 알려주어야 한다\n// 아이템들을 구분할 수 있게끔 구별해주는 것이 필요하다\n// kety요소를 추가해서 리액트가 개별 아이템을 인식할 수 있도록 도와준다\n// key이 value값은 고유값으로 설정해줘야한다\n// 고유 id를 정하기 귀찮다면 걍 map에서 전달하는 함수에서 자동으로 얻어지는\n// index값으로 사용하자 -> 추천은 아님(특정 아이템에 대한 인덱스가 항상 똑같고 간접적으로 지정된 것이기 때문)\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseItem","Card","ExpensesFilter","useState","Expenses","props","filterdYear","setFilterdYear","filterChangeHandler","selectedYear","console","log","items","filter","filteredArray","expens","date","getFullYear","toString","flagfilterdArray","length","map","title","amount","id"],"sources":["/Users/jeonsoyeon/Desktop/react/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nconst Expenses = (props) => {\n  const [filterdYear, setFilterdYear] = useState(\"2019\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilterdYear(selectedYear);\n    console.log(filterdYear);\n    props.items.filter(props);\n  };\n\n  const filteredArray = props.items.filter((expens) => {\n    return expens.date.getFullYear().toString() === filterdYear;\n  });\n\n  const flagfilterdArray = <p> No expense Found./</p>;\n\n  if(filteredArray.length > 0){\n    flagfilterdArray =  filteredArray.map((expens) => (\n      <ExpenseItem\n        key={expens.id}\n        title={expens.title}\n        amount={expens.amount}\n        date={expens.date}\n      />\n    ));\n  }\n\n \n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filterdYear}\n          onFilterChangeHandler={filterChangeHandler}\n        />\n\n        {/* <ExpenseItem\n          title={props.items[0].title}\n          amount={props.items[0].amount}\n          date={props.items[0].date}\n        ></ExpenseItem>\n        <ExpenseItem\n          title={props.items[1].title}\n          amount={props.items[1].amount}\n          date={props.items[1].date}\n        ></ExpenseItem>\n        <ExpenseItem\n          title={props.items[2].title}\n          amount={props.items[2].amount}\n          date={props.items[2].date}\n        ></ExpenseItem> */}\n        {/*\n        조건식이 길어서 읽기 힘드니 &&연산자를 사용해서 render할 수도 있다 \n        {filteredArray.length === 0 ? (\n          <p>No Expense found.</p>\n        ) : (\n          filteredArray.map((expens) => (\n            <ExpenseItem\n              key={expens.id}\n              title={expens.title}\n              amount={expens.amount}\n              date={expens.date}\n            />\n          ))\n        )} */}\n        {/* \n        \n        {\n          filteredArray.length === 0 && <p>No expense found.</p>\n        }\n        {\n          filteredArray.map((expens)=> (\n            <ExpenseItem\n            key={expens.id}\n            title={expens.title}\n            amount={expens.amount}\n            date={expens.date}\n          />\n          ))\n        } */}\n        {/* {props.items.map((expens, index)=>(\n        //   <ExpenseItem\n        //     key ={expens.id}\n        //     title = {expens.title}\n        //     amount = {expens.amount}\n        //     date={expens.date}\n        //   />\n        // ))}  */}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n// 버튼 추가하면 우리 화면에서는 맨 위에 보이는 아이템이 실제로는\n// 맨 아래에 가 있다\n// 리액트는 새롭게 생긴 아이템을 div맨 마지막 아이템으로 렌더링하고\n// 모든 아이템을 업데이트해서 순서를 바꾼다\n// 리액트에게는 다 고만고만한 애들로 보이기 때문에 새로운 아이템이 어느 위치에 추가되어야 할지를 알려주어야 한다\n// 아이템들을 구분할 수 있게끔 구별해주는 것이 필요하다\n// kety요소를 추가해서 리액트가 개별 아이템을 인식할 수 있도록 도와준다\n// key이 value값은 고유값으로 설정해줘야한다\n// 고유 id를 정하기 귀찮다면 걍 map에서 전달하는 함수에서 자동으로 얻어지는\n// index값으로 사용하자 -> 추천은 아님(특정 아이템에 대한 인덱스가 항상 똑같고 간접적으로 지정된 것이기 때문)\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,gBAAgB;AACvB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAAC;AACjC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,MAAM,CAAC;EAEtD,MAAMK,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,cAAc,CAACE,YAAY,CAAC;IAC5BC,OAAO,CAACC,GAAG,CAACL,WAAW,CAAC;IACxBD,KAAK,CAACO,KAAK,CAACC,MAAM,CAACR,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMS,aAAa,GAAGT,KAAK,CAACO,KAAK,CAACC,MAAM,CAAEE,MAAM,IAAK;IACnD,OAAOA,MAAM,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKZ,WAAW;EAC7D,CAAC,CAAC;EAEF,MAAMa,gBAAgB,gBAAG;IAAA,UAAG;EAAmB;IAAA;IAAA;IAAA;EAAA,QAAI;EAEnD,IAAGL,aAAa,CAACM,MAAM,GAAG,CAAC,EAAC;IAC1BD,gBAAgB,GAAIL,aAAa,CAACO,GAAG,CAAEN,MAAM,iBAC3C,QAAC,WAAW;MAEV,KAAK,EAAEA,MAAM,CAACO,KAAM;MACpB,MAAM,EAAEP,MAAM,CAACQ,MAAO;MACtB,IAAI,EAAER,MAAM,CAACC;IAAK,GAHbD,MAAM,CAACS,EAAE;MAAA;MAAA;MAAA;IAAA,QAKjB,CAAC;EACJ;EAGA,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,uBACxB,QAAC,cAAc;QACb,QAAQ,EAAElB,WAAY;QACtB,qBAAqB,EAAEE;MAAoB;QAAA;QAAA;QAAA;MAAA;IAC3C;MAAA;MAAA;MAAA;IAAA;EAsDG;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GA1FIJ,QAAQ;AAAA,KAARA,QAAQ;AA4Fd,eAAeA,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}