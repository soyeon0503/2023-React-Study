{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      // 디스페치될 때 추가 정보(등록되는 아이템)의 정보를 디스패치해야한다\n      const newItem = action.payload;\n      //  추가 버튼을 눌렀을 때 기존에 등록 되어 있는 상품인지 확인하고 배열에 아이템 정보 값을 넣는다\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        // existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","totalAmount","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"sources":["/Users/soyeon/Documents/study/react/15-advanced-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState:{\n        items: [],\n        totalQuantity: 0,\n        totalAmount: 0\n    },\n    reducers: {\n        addItemToCart(state, action){\n            // 디스페치될 때 추가 정보(등록되는 아이템)의 정보를 디스패치해야한다\n            const newItem = action.payload;\n            //  추가 버튼을 눌렀을 때 기존에 등록 되어 있는 상품인지 확인하고 배열에 아이템 정보 값을 넣는다\n            const existingItem = state.items.find(item => item.id === newItem.id);\n            state.totalQuantity ++;\n            if(!existingItem) {\n                state.items.push({\n                    itemId : newItem.id, \n                    price: newItem.price, \n                    quantity: 1, \n                    totalPrice: newItem.price,\n                    name: newItem.title\n                });\n            }else{\n                existingItem.quantity ++;\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n            }\n        },\n        removeItemFromCart(state, action){\n            const id = action.payload;\n            const existingItem = state.items.find((item) => item.id === id);\n            state.totalQuantity--;\n            if(existingItem.quantity === 1 ){\n                state.items = state.items.filter((item) => item.id !== id);\n            }else{\n                existingItem.quantity --;\n                // existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n            }\n        }\n    }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAC;IACTC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,CAAC;IAChBC,WAAW,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACNC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAC;MACxB;MACA,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAK,CAACU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrEP,KAAK,CAACJ,aAAa,EAAG;MACtB,IAAG,CAACQ,YAAY,EAAE;QACdJ,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UACbC,MAAM,EAAGP,OAAO,CAACK,EAAE;UACnBG,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEV,OAAO,CAACQ,KAAK;UACzBjB,IAAI,EAAES,OAAO,CAACW;QAClB,CAAC,CAAC;MACN,CAAC,MAAI;QACDT,YAAY,CAACO,QAAQ,EAAG;QACxBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGV,OAAO,CAACQ,KAAK;MACrE;IACJ,CAAC;IACDI,kBAAkBA,CAACd,KAAK,EAAEC,MAAM,EAAC;MAC7B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/DP,KAAK,CAACJ,aAAa,EAAE;MACrB,IAAGQ,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAE;QAC5BX,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACoB,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC9D,CAAC,MAAI;QACDH,YAAY,CAACO,QAAQ,EAAG;QACxB;MACJ;IACJ;EACJ;AACJ,CAAC,CAAC;;AACF,OAAO,MAAMK,WAAW,GAAGxB,SAAS,CAACyB,OAAO;AAC5C,eAAezB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}