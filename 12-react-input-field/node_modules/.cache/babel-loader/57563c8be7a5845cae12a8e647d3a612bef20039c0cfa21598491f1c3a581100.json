{"ast":null,"code":"var _jsxFileName = \"/Users/soyeon/Documents/study/react/12-react-input-field/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  // 모든 디펜던시들을 합친 후에 이 값이 모두 유효한지 확인하고 유효하다면 전체 폼이 유효하다고 설정\n  // useEffect(()=>{\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  // }, [enteredNameIsValid]);\n\n  // prev\n  // useEffect(() => {\n  //   if (enteredNameIsValid) {\n  //     console.log(\"Name is Valid\");\n  //   }\n  // }, [enteredNameIsValid]);\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const forSubmissionHandler = event => {\n    event.preventDefault();\n\n    // setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n    resetNameInput();\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: forSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // ref={nameInputRef}\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), !enteredEmailIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"SoBTTY5oFCXF0rNCisspw2yHAPo=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useRef","useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputIsInvalid","formIsValid","emailInputChangeHandler","event","target","emailInputBlurHandler","forSubmissionHandler","preventDefault","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/soyeon/Documents/study/react/12-react-input-field/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const { \n    value : enteredName,\n    isValid : enteredNameIsValid,\n    hasError : nameInputHasError, \n    valueChangeHandler : nameChangeHandler,\n    inputBlurHandler : nameBlurHandler,\n    reset : resetNameInput\n  } = useInput( value => value.trim() !== '');\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  // 모든 디펜던시들을 합친 후에 이 값이 모두 유효한지 확인하고 유효하다면 전체 폼이 유효하다고 설정\n  // useEffect(()=>{\n    let formIsValid = false;\n    if(enteredNameIsValid &&enteredEmailIsValid){\n      formIsValid = true;\n    }\n  // }, [enteredNameIsValid]);\n\n  // prev\n  // useEffect(() => {\n  //   if (enteredNameIsValid) {\n  //     console.log(\"Name is Valid\");\n  //   }\n  // }, [enteredNameIsValid]);\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  }\n\n  const forSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    // setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n    resetNameInput();\n\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  \n  const emailInputClasses = emailInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={forSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          // ref={nameInputRef}\n          type='text'\n          id='name'\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className='error-text'>Name must not be empty.</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {!enteredEmailIsValid && (\n          <p className='error-text'>Please enter a valid email</p>\n        )}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}