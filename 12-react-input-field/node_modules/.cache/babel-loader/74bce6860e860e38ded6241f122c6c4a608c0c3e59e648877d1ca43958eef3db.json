{"ast":null,"code":"var _jsxFileName = \"/Users/soyeon/Documents/study/react/12-react-input-field/src/components/BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const {\n    value: enteredFirstName,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredLastName,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(value => value.trim() !== '');\n  const forSubmissionHandler = event => {\n    event.preventDefault();\n    if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\n      return;\n    }\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n  const submitHandler = event => {};\n  const firstNameInputClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameInputClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: forSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: firstNameInputClasses,\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: lastNameInputClasses,\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: emailInputClasses,\n        type: \"email\",\n        id: \"name\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"tWn9QtGnyXPj5lYRZIsxPCnYIRQ=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","BasicForm","props","_s","value","enteredFirstName","isValid","firstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstName","trim","enteredLastName","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","enteredEmail","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","forSubmissionHandler","event","preventDefault","formIsValid","submitHandler","firstNameInputClasses","lastNameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/soyeon/Documents/study/react/12-react-input-field/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\nconst BasicForm = (props) => {\n  const {\n    value : enteredFirstName, \n    isValid : firstNameIsValid,\n    hasError : firstNameHasError,\n    valueChangeHandler : firstNameChangeHandler,\n    inputBlurHandler : firstNameBlurHandler,\n    reset : resetFirstName\n  } = useInput(value => value.trim() !== '');\n\n  const {\n    value : enteredLastName, \n    isValid : lastNameIsValid,\n    hasError : lastNameHasError,\n    valueChangeHandler : lastNameChangeHandler,\n    inputBlurHandler : lastNameBlurHandler,\n    reset : resetLastName\n  } = useInput(value => value.trim() !== '');\n\n  const {\n    value : enteredEmail, \n    isValid : emailIsValid,\n    hasError : emailHasError,\n    valueChangeHandler : emailChangeHandler,\n    inputBlurHandler : emailBlurHandler,\n    reset : resetEmail\n  } = useInput(value => value.trim() !== '');\n\n  const forSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\n      return;\n    }\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n  let formIsValid = false;\n  if(firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = event => {\n    \n  }\n\n  const firstNameInputClasses = firstNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const lastNameInputClasses = lastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";   \n  \n  const emailInputClasses = emailHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={forSubmissionHandler}>\n      <div className='control-group'>\n        <div className='form-control'>\n          <label htmlFor='name'>First Name</label>\n          <input \n            className={firstNameInputClasses}\n            type='text' \n            id='name' \n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n            value={enteredFirstName}\n          />\n          {firstNameHasError && (\n          <p className='error-text'>Name must not be empty.</p>\n        )}\n        </div>\n        <div className='form-control'>\n          <label htmlFor='name'>Last Name</label>\n          <input \n            className={lastNameInputClasses}\n            type='text' \n            id='name' \n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n            value={enteredLastName}\n          />\n          {lastNameHasError && (\n          <p className='error-text'>Name must not be empty.</p>\n        )}\n        </div>\n      </div>\n      <div className='form-control'>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input \n          className={emailInputClasses}\n          type='email' \n          id='name' \n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailHasError && (\n          <p className='error-text'>Please enter a valid email</p>\n        )}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM;IACJC,KAAK,EAAGC,gBAAgB;IACxBC,OAAO,EAAGC,gBAAgB;IAC1BC,QAAQ,EAAGC,iBAAiB;IAC5BC,kBAAkB,EAAGC,sBAAsB;IAC3CC,gBAAgB,EAAGC,oBAAoB;IACvCC,KAAK,EAAGC;EACV,CAAC,GAAGjB,QAAQ,CAACM,KAAK,IAAIA,KAAK,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;EAE1C,MAAM;IACJZ,KAAK,EAAGa,eAAe;IACvBX,OAAO,EAAGY,eAAe;IACzBV,QAAQ,EAAGW,gBAAgB;IAC3BT,kBAAkB,EAAGU,qBAAqB;IAC1CR,gBAAgB,EAAGS,mBAAmB;IACtCP,KAAK,EAAGQ;EACV,CAAC,GAAGxB,QAAQ,CAACM,KAAK,IAAIA,KAAK,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;EAE1C,MAAM;IACJZ,KAAK,EAAGmB,YAAY;IACpBjB,OAAO,EAAGkB,YAAY;IACtBhB,QAAQ,EAAGiB,aAAa;IACxBf,kBAAkB,EAAGgB,kBAAkB;IACvCd,gBAAgB,EAAGe,gBAAgB;IACnCb,KAAK,EAAGc;EACV,CAAC,GAAG9B,QAAQ,CAACM,KAAK,IAAIA,KAAK,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;EAE1C,MAAMa,oBAAoB,GAAIC,KAAK,IAAK;IACtCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACxB,gBAAgB,IAAI,CAACW,eAAe,IAAI,CAACM,YAAY,EAAE;MAC1D;IACF;IACAT,cAAc,CAAC,CAAC;IAChBO,aAAa,CAAC,CAAC;IACfM,UAAU,CAAC,CAAC;EACd,CAAC;EACD,IAAII,WAAW,GAAG,KAAK;EACvB,IAAGzB,gBAAgB,IAAIW,eAAe,IAAIM,YAAY,EAAE;IACtDQ,WAAW,GAAG,IAAI;EACpB;EAEA,MAAMC,aAAa,GAAGH,KAAK,IAAI,CAE/B,CAAC;EAED,MAAMI,qBAAqB,GAAGzB,iBAAiB,GAC3C,sBAAsB,GACtB,cAAc;EAClB,MAAM0B,oBAAoB,GAAGhB,gBAAgB,GACzC,sBAAsB,GACtB,cAAc;EAElB,MAAMiB,iBAAiB,GAAGX,aAAa,GACnC,sBAAsB,GACtB,cAAc;EAElB,oBACEzB,OAAA;IAAMqC,QAAQ,EAAER,oBAAqB;IAAAS,QAAA,gBACnCtC,OAAA;MAAKuC,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5BtC,OAAA;QAAKuC,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3BtC,OAAA;UAAOwC,OAAO,EAAC,MAAM;UAAAF,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxC5C,OAAA;UACEuC,SAAS,EAAEL,qBAAsB;UACjCW,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,MAAM;UACTC,QAAQ,EAAEpC,sBAAuB;UACjCqC,MAAM,EAAEnC,oBAAqB;UAC7BT,KAAK,EAAEC;QAAiB;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,EACDnC,iBAAiB,iBAClBT,OAAA;UAAGuC,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAC;QAAuB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACrD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACN5C,OAAA;QAAKuC,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3BtC,OAAA;UAAOwC,OAAO,EAAC,MAAM;UAAAF,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvC5C,OAAA;UACEuC,SAAS,EAAEJ,oBAAqB;UAChCU,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,MAAM;UACTC,QAAQ,EAAE3B,qBAAsB;UAChC4B,MAAM,EAAE3B,mBAAoB;UAC5BjB,KAAK,EAAEa;QAAgB;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,EACDzB,gBAAgB,iBACjBnB,OAAA;UAAGuC,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAC;QAAuB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACrD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN5C,OAAA;MAAKuC,SAAS,EAAC,cAAc;MAAAD,QAAA,gBAC3BtC,OAAA;QAAOwC,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5C5C,OAAA;QACEuC,SAAS,EAAEH,iBAAkB;QAC7BS,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC,MAAM;QACTC,QAAQ,EAAErB,kBAAmB;QAC7BsB,MAAM,EAAErB,gBAAiB;QACzBvB,KAAK,EAAEmB;MAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,EACDnB,aAAa,iBACZzB,OAAA;QAAGuC,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAA0B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACxD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN5C,OAAA;MAAKuC,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BtC,OAAA;QAAQiD,QAAQ,EAAE,CAACjB,WAAY;QAAAM,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACzC,EAAA,CA7GIF,SAAS;EAAA,QAQTH,QAAQ,EASRA,QAAQ,EASRA,QAAQ;AAAA;AAAAoD,EAAA,GA1BRjD,SAAS;AA+Gf,eAAeA,SAAS;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}