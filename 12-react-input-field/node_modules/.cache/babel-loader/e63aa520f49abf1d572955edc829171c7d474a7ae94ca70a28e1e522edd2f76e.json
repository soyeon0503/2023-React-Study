{"ast":null,"code":"var _jsxFileName = \"/Users/soyeon/Documents/study/react/12-react-input-field/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef(\"\");\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log('Name is Valid');\n    }\n  }, [enteredNameIsValid]);\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const forSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    // const enteredValue =  nameInputRef.current.value;\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    // console.log(enteredName);\n    // console.log(enteredValue);\n    setEnteredNameIsValid(true);\n    setEnteredName('');\n  };\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = enteredNameIsValid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: forSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"bm/27lsNsiIXuRMukf2inprCLH4=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameInputChangeHandler","event","target","value","forSubmissionHandler","preventDefault","trim","nameInputIsInvalid","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","id","onChange","_c","$RefreshReg$"],"sources":["/Users/soyeon/Documents/study/react/12-react-input-field/src/components/SimpleInput.js"],"sourcesContent":["import {useEffect, useRef,  useState} from 'react';\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef(\"\");\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  useEffect(()=>{\n    if(enteredNameIsValid){\n      console.log('Name is Valid');\n    }\n  },[enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const forSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    // const enteredValue =  nameInputRef.current.value;\n\n    if(enteredName.trim() === ''){\n      setEnteredNameIsValid(false);\n      return;\n    }\n    // console.log(enteredName);\n    // console.log(enteredValue);\n    setEnteredNameIsValid(true);\n\n    setEnteredName('');\n  };\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputClasses = enteredNameIsValid ? 'form-control invalid' : 'form-control' ;\n\n  return (\n    <form onSubmit={forSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input ref={nameInputRef} type='text' id='name' onChange={nameInputChangeHandler} value={enteredName} />\n        {nameInputIsInvalid && <p className='error-text'>Name must not be empty.</p> }\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,MAAM,EAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAMC,YAAY,GAAGP,MAAM,CAAC,EAAE,CAAC;EAC/B,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnEF,SAAS,CAAC,MAAI;IACZ,IAAGW,kBAAkB,EAAC;MACpBI,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC9B;EACF,CAAC,EAAC,CAACL,kBAAkB,CAAC,CAAC;EAEvB,MAAMM,sBAAsB,GAAGC,KAAK,IAAI;IACtCR,cAAc,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,oBAAoB,GAAIH,KAAK,IAAK;IACtCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtBR,qBAAqB,CAAC,IAAI,CAAC;IAC3B;;IAEA,IAAGL,WAAW,CAACc,IAAI,CAAC,CAAC,KAAK,EAAE,EAAC;MAC3BX,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACF;IACA;IACA;IACAA,qBAAqB,CAAC,IAAI,CAAC;IAE3BF,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EACD,MAAMc,kBAAkB,GAAG,CAACb,kBAAkB,IAAIE,kBAAkB;EAEpE,MAAMY,gBAAgB,GAAGd,kBAAkB,GAAG,sBAAsB,GAAG,cAAc;EAErF,oBACEP,OAAA;IAAMsB,QAAQ,EAAEL,oBAAqB;IAAAM,QAAA,gBACnCvB,OAAA;MAAKwB,SAAS,EAAEH,gBAAiB;MAAAE,QAAA,gBAC/BvB,OAAA;QAAOyB,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvC7B,OAAA;QAAO8B,GAAG,EAAE1B,YAAa;QAAC2B,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAACC,QAAQ,EAAEpB,sBAAuB;QAACG,KAAK,EAAEX;MAAY;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACvGT,kBAAkB,iBAAIpB,OAAA;QAAGwB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACN7B,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BvB,OAAA;QAAAuB,QAAA,EAAQ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAC1B,EAAA,CA/CIF,WAAW;AAAAiC,EAAA,GAAXjC,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}