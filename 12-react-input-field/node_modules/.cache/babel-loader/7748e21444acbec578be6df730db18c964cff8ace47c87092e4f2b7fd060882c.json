{"ast":null,"code":"var _jsxFileName = \"/Users/soyeon/Documents/study/react/12-react-input-field/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandelr,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes('@'));\n\n  // 모든 디펜던시들을 합친 후에 이 값이 모두 유효한지 확인하고 유효하다면 전체 폼이 유효하다고 설정\n  // useEffect(()=>{\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  // }, [enteredNameIsValid]);\n\n  // prev\n  // useEffect(() => {\n  //   if (enteredNameIsValid) {\n  //     console.log(\"Name is Valid\");\n  //   }\n  // }, [enteredNameIsValid]);\n\n  const forSubmissionHandler = event => {\n    event.preventDefault();\n    if (!enteredNameIsValid) {\n      return;\n    }\n    resetNameInput();\n    resetEmailInput();\n  };\n  const nameInputClasses = nameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: forSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // ref={nameInputRef}\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"LQSW3f2+5mGhTU4DM8mjVbOA5uM=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useRef","useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandelr","emailBlurHandler","resetEmailInput","includes","formIsValid","forSubmissionHandler","event","preventDefault","nameInputClasses","emailInputClasses","emailInputIsInvalid","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","emailInputChangeHandler","emailInputBlurHandler","disabled","_c","$RefreshReg$"],"sources":["/Users/soyeon/Documents/study/react/12-react-input-field/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const { \n    value : enteredName,\n    isValid : enteredNameIsValid,\n    hasError : nameInputHasError, \n    valueChangeHandler : nameChangeHandler,\n    inputBlurHandler : nameBlurHandler,\n    reset : resetNameInput\n  } = useInput( value => value.trim() !== '');\n\n  const {\n    value : enteredEmail,\n    isValid : enteredEmailIsValid,\n    hasError : emailInputHasError,\n    valueChangeHandler : emailChangeHandelr,\n    inputBlurHandler : emailBlurHandler,\n    reset : resetEmailInput\n  } = useInput (value => value.includes('@'))\n\n\n\n  // 모든 디펜던시들을 합친 후에 이 값이 모두 유효한지 확인하고 유효하다면 전체 폼이 유효하다고 설정\n  // useEffect(()=>{\n    let formIsValid = false;\n\n    if(enteredNameIsValid && enteredEmailIsValid){\n      formIsValid = true;\n    }\n  // }, [enteredNameIsValid]);\n\n  // prev\n  // useEffect(() => {\n  //   if (enteredNameIsValid) {\n  //     console.log(\"Name is Valid\");\n  //   }\n  // }, [enteredNameIsValid]);\n\n\n  const forSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  \n  const emailInputClasses = emailInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={forSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          // ref={nameInputRef}\n          type='text'\n          id='name'\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className='error-text'>Name must not be empty.</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && (\n          <p className='error-text'>Please enter a valid email</p>\n        )}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}